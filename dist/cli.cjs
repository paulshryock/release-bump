#!/usr/bin/env node
var H=Object.defineProperty;var $=Object.getOwnPropertySymbols;var C=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable;var S=(e,r,t)=>r in e?H(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,u=(e,r)=>{for(var t in r||(r={}))C.call(r,t)&&S(e,t,r[t]);if($)for(var t of $(r))k.call(r,t)&&S(e,t,r[t]);return e};var B=(e,r)=>{var t={};for(var n in e)C.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(e!=null&&$)for(var n of $(e))r.indexOf(n)<0&&k.call(e,n)&&(t[n]=e[n]);return t};var M="3.0.0-alpha.37",f={RELEASE_BUMP_VERSION:M};var D=require("console"),d=require("fs"),O=require("fs/promises"),L=require("path"),v=[{description:"Path to changelog.",name:"changelogPath",type:"string"},{description:"Release date.",name:"date",type:"string"},{alias:"d",description:"Dry run.",name:"dryRun",type:"boolean"},{alias:"e",description:"Fail on error.",name:"failOnError",type:"boolean"},{description:"Path to directory of files to bump.",name:"filesPath",type:"string"},{description:"Directories to ignore.",name:"ignore",type:"string[]"},{alias:"h",description:"Log CLI usage text.",name:"help",type:"boolean"},{alias:"p",description:"Prefix release version with a 'v'.",name:"prefix",type:"boolean"},{alias:"q",description:"Quiet, no logs.",name:"quiet",type:"boolean"},{description:"Release version.",name:"release",type:"string"},{description:"Remote git repository URL.",name:"repository",type:"string"},{alias:"v",description:"Log Release Bump version.",name:"version",type:"boolean"}];function q(e,r){return e.filter(t=>!r.some(n=>t.includes(n)))}function _(e){let r=[];return e.forEach(t=>{Array.isArray(t)?r.push(..._(t)):r.push(t)}),r}function U(e){if(typeof e=="string"){if(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()!@:%_+.~#?&/=]*)/.test(e))return e;if(/^[-a-zA-Z0-9()!@:%_+~#?&=]+\/[-a-zA-Z0-9()!@:%_+~#?&=]+$/.test(e))return`https://github.com/${e}`}else return typeof(e==null?void 0:e.url)>"u"?"":U(e.url.replace(/(^git\+|\.git$)/,""));return""}async function I(e,r){var h,y;let{date:t,isChangelog:n,prefix:o,release:a,repository:i}=r;if(!/^\d+\.\d+\.\d+$/.test(a))return e;let l=(y=(h=/\d+\.\d+\.\d+/.exec(a))==null?void 0:h[0])!=null?y:a;if(n===!1)return e.replace(/@([Ss]ince|[Vv]ersion)(:?\s+)unreleased/g,`@$1$2${l}`);let p=i.includes("bitbucket.org")?"bitbucket":"github",R=`${i}/${p==="bitbucket"?"commits":"releases"}/tag/${o?"v":""}${l}`,g=`## [${o?"v":""}${l}]`+(i!==""?`(${R})`:"")+(t?` - ${t}`:"");if(e.includes(g))return e;let m=`(${i}/${p==="bitbucket"?"branches/":""}compare/HEAD..${o?"v":""}${l})`,F=`## [Unreleased]${i?m:""}

### `+["Added","Changed","Deprecated","Removed","Fixed","Security"].join(`

### `);return e.replace(/## \[Unreleased\](\(.*\))?/,g).replace(/### (Added|Changed|Deprecated|Removed|Fixed|Security)\n\n/g,"").replace(/### (Added|Changed|Deprecated|Removed|Fixed|Security)\n$/g,"").replace(/\n\n$/g,`
`).replace(g,F+`

`+g)}function j(e){return[`Usage
	$ release-bump <options>`,"Options"+e.reduce((r,t)=>{let n=t.alias?(t.name.length<6?"	":"")+`	-${t.alias}`:"		",o=t.alias?`	${t.description}`:(t.name.length<6?"	":"")+t.description;return r+`
	--${t.name}${n}${o}`},""),`Examples
	$ release-bump -pq --files=src`].join(`

`)}async function E(e){let{directoriesToIgnore:r,failOnError:t,filesPath:n,paths:o}=e;if(r.some(s=>n.includes(s)))return o!=null?o:[];let a=[];try{a=await(0,O.readdir)(n)}catch(s){if(t)throw process.exitCode=1,s;a=[]}let i=await Promise.all(a.map(async s=>(await(0,O.stat)(`${n}/${s}`)).isDirectory()===!0?await E({directoriesToIgnore:r,failOnError:t,filesPath:`${n}/${s}`,paths:o}):(0,L.join)(`${n}/${s}`)));return[...new Set(_([...o,...i]))]}function N(e){return e!=null&&e.RELEASE_BUMP_VERSION?"v"+e.RELEASE_BUMP_VERSION:"no version found"}function V({quiet:e}){return e===!0?new D.Console({stdout:(0,d.createWriteStream)("/dev/null"),stderr:(0,d.createWriteStream)("/dev/null")}):console}function z(e,r){return e.reduce((t,n,o)=>{let a={};if(n.indexOf("--")===0){let[i,s]=n.substr(2).split("="),l=r.find(p=>p.name===i);if(l)switch(l.type){case"boolean":a[i]=!0;break;case"string[]":a[i]=s==null?void 0:s.split(",");break;default:a[i]=s;break}}else if(n.indexOf("-")===0)[...n.substr(1)].forEach(i=>{let s=r.find(l=>l.alias===i);s&&(a[s.name]=!0)});else{let i=Object.keys(t),s=i[i.length-1],l=r.find(p=>p.name===s);l&&(t[s]===`$${o-1}`||typeof t[s]>"u")&&(a[s]=l.type==="string[]"?n.split(","):n)}return u(u({},t),a)},{})}function Z(e){var i;let r,t=f.NODE_ENV==="test"||!1;try{r=JSON.parse((0,d.readFileSync)("package.json","utf8"))}catch(s){r={repository:"",version:"0.0.0"}}let n=[".git",".github","coverage","dist","node_modules","tests/fixtures"],o={changelogPath:"CHANGELOG.md",date:(i=new Date().toISOString().split("T"))==null?void 0:i[0],dryRun:!1,failOnError:!1,filesPath:".",ignore:n,prefix:!1,quiet:t,release:r.version,repository:U(r.repository)};return u(u({},o),e)}var P=require("fs/promises");async function G(e){let{changelogPath:r,date:t,dryRun:n,failOnError:o,filesPath:a,ignore:i,prefix:s,quiet:l,release:p,repository:R}=Z(e),g=V({quiet:l}),m=i,h=await E({directoriesToIgnore:m,failOnError:o,filesPath:a,paths:[r]}),y=q(h,m),b=[];return await Promise.all(y.map(async c=>{let w="";try{w=await(0,P.readFile)(c,"utf8")}catch(x){if(o)throw process.exitCode=1,x;g.warn(`could not read ${c}`)}let A=await I(w,{date:t,isChangelog:r===c,prefix:s,quiet:l,release:p,repository:R});if(w!==A&&(b.push(c),!n))try{await(0,P.writeFile)(c,A,"utf8")}catch(x){if(o)throw process.exitCode=1,x;g.warn(`could not write ${c}`,x)}})),b.length>0&&g.info((n?"would have ":"")+`bumped ${b.join(", ")}`),b}(async function(){var o,a;let e=(a=(o=process.argv)==null?void 0:o.slice(2))!=null?a:[],i=z(e,v),{help:r,version:t}=i,n=B(i,["help","version"]);if(r===!0)return console.info(j(v));if(t===!0)return console.info(N(f));await G(n)})();
