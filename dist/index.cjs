var b=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames,S=Object.getOwnPropertySymbols;var C=Object.prototype.hasOwnProperty,z=Object.prototype.propertyIsEnumerable;var A=(e,t,r)=>t in e?b(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,E=(e,t)=>{for(var r in t||(t={}))C.call(t,r)&&A(e,r,t[r]);if(S)for(var r of S(t))z.call(t,r)&&A(e,r,t[r]);return e};var Z=(e,t)=>{for(var r in t)b(e,r,{get:t[r],enumerable:!0})},G=(e,t,r,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of V(t))!C.call(e,n)&&n!==r&&b(e,n,{get:()=>t[n],enumerable:!(i=j(t,n))||i.enumerable});return e};var H=e=>G(b({},"__esModule",{value:!0}),e);var Q={};Z(Q,{releaseBump:()=>J});module.exports=H(Q);var M="3.0.0-alpha.36",x={RELEASE_BUMP_VERSION:M};var D=require("console"),u=require("fs"),$=require("fs/promises"),B=require("path");function T(e,t){return e.filter(r=>!t.some(i=>r.includes(i)))}function L(e){let t=[];return e.forEach(r=>{Array.isArray(r)?t.push(...L(r)):t.push(r)}),t}function _(e){if(typeof e=="string"){if(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()!@:%_+.~#?&/=]*)/.test(e))return e;if(/^[-a-zA-Z0-9()!@:%_+~#?&=]+\/[-a-zA-Z0-9()!@:%_+~#?&=]+$/.test(e))return`https://github.com/${e}`}else return typeof(e==null?void 0:e.url)>"u"?"":_(e.url.replace(/(^git\+|\.git$)/,""));return""}async function q(e,t){var R,m;let{date:r,isChangelog:i,prefix:n,release:a,repository:s}=t;if(!/^\d+\.\d+\.\d+$/.test(a))return e;let l=(m=(R=/\d+\.\d+\.\d+/.exec(a))==null?void 0:R[0])!=null?m:a;if(i===!1)return e.replace(/@([Ss]ince|[Vv]ersion)(:?\s+)unreleased/g,`@$1$2${l}`);let c=s.includes("bitbucket.org")?"bitbucket":"github",P=`${s}/${c==="bitbucket"?"commits":"releases"}/tag/${n?"v":""}${l}`,g=`## [${n?"v":""}${l}]`+(s!==""?`(${P})`:"")+(r?` - ${r}`:"");if(e.includes(g))return e;let d=`(${s}/${c==="bitbucket"?"branches/":""}compare/HEAD..${n?"v":""}${l})`,f=`## [Unreleased]${s?d:""}

### `+["Added","Changed","Deprecated","Removed","Fixed","Security"].join(`

### `);return e.replace(/## \[Unreleased\](\(.*\))?/,g).replace(/### (Added|Changed|Deprecated|Removed|Fixed|Security)\n\n/g,"").replace(/### (Added|Changed|Deprecated|Removed|Fixed|Security)\n$/g,"").replace(/\n\n$/g,`
`).replace(g,f+`

`+g)}async function v(e){let{directoriesToIgnore:t,failOnError:r,filesPath:i,paths:n}=e;if(t.some(o=>i.includes(o)))return n!=null?n:[];let a=[];try{a=await(0,$.readdir)(i)}catch(o){if(r)throw process.exitCode=1,o;a=[]}let s=await Promise.all(a.map(async o=>(await(0,$.stat)(`${i}/${o}`)).isDirectory()===!0?await v({directoriesToIgnore:t,failOnError:r,filesPath:`${i}/${o}`,paths:n}):(0,B.join)(`${i}/${o}`)));return[...new Set(L([...n,...s]))]}function U({quiet:e}){return e===!0?new D.Console({stdout:(0,u.createWriteStream)("/dev/null"),stderr:(0,u.createWriteStream)("/dev/null")}):console}function I(e){var s;let t,r=x.NODE_ENV==="test"||!1;try{t=JSON.parse((0,u.readFileSync)("package.json","utf8"))}catch(o){t={repository:"",version:"0.0.0"}}let i=[".git",".github","coverage","dist","node_modules","tests/fixtures"],n={changelogPath:"CHANGELOG.md",date:(s=new Date().toISOString().split("T"))==null?void 0:s[0],dryRun:!1,failOnError:!1,filesPath:".",ignore:i,prefix:!1,quiet:r,release:t.version,repository:_(t.repository)};return E(E({},n),e)}var O=require("fs/promises");async function J(e){let{changelogPath:t,date:r,dryRun:i,failOnError:n,filesPath:a,ignore:s,prefix:o,quiet:l,release:c,repository:P}=I(e),g=U({quiet:l}),d=i===!0,f=s,m=await v({directoriesToIgnore:f,failOnError:n,filesPath:a,paths:[t]}),N=T(m,f),h=[];return await Promise.all(N.map(async p=>{let w="";try{w=await(0,O.readFile)(p,"utf8")}catch(y){if(n)throw process.exitCode=1,y;g.warn(`could not read ${p}`)}let F=await q(w,{date:r,isChangelog:t===p,prefix:o,quiet:l,release:c,repository:P});if(w!==F&&(h.push(p),d!==!0))try{x.NODE_ENV!=="test"&&await(0,O.writeFile)(p,F,"utf8")}catch(y){if(n)throw process.exitCode=1,y;g.warn(`could not write ${p}`,y)}})),h.length>0&&g.info((d?"would have ":"")+`bumped ${h.join(", ")}`),i?[]:h}0&&(module.exports={releaseBump});
