var y=Object.defineProperty;var q=Object.getOwnPropertyDescriptor;var U=Object.getOwnPropertyNames,F=Object.getOwnPropertySymbols;var S=Object.prototype.hasOwnProperty,I=Object.prototype.propertyIsEnumerable;var k=(e,t,n)=>t in e?y(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,P=(e,t)=>{for(var n in t||(t={}))S.call(t,n)&&k(e,n,t[n]);if(F)for(var n of F(t))I.call(t,n)&&k(e,n,t[n]);return e};var j=(e,t)=>{for(var n in t)y(e,n,{get:t[n],enumerable:!0})},L=(e,t,n,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of U(t))!S.call(e,r)&&r!==n&&y(e,r,{get:()=>t[r],enumerable:!(i=q(t,r))||i.enumerable});return e};var V=e=>L(y({},"__esModule",{value:!0}),e);var G={};j(G,{releaseBump:()=>Z});module.exports=V(G);var z={RELEASE_BUMP_VERSION:"3.0.0-alpha.29"},l={env:z};var A=require("fs"),b=require("fs/promises"),D=require("path");function B(e,t){return e.filter(n=>!t.some(i=>n.includes(i)))}function T(e){if(typeof e=="string"){if(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()!@:%_+.~#?&/=]*)/.test(e))return e;if(/^[-a-zA-Z0-9()!@:%_+~#?&=]+\/[-a-zA-Z0-9()!@:%_+~#?&=]+$/.test(e))return`https://github.com/${e}`}else return typeof(e==null?void 0:e.url)>"u"?"":T(e.url.replace(/(^git\+|\.git$)/,""));return""}async function N(e,t){var h,g;let{date:n,isChangelog:i,prefix:r,quiet:o,release:a,repository:s}=t;if(!/^\d+\.\d+\.\d+$/.test(a))return e;let c=(g=(h=/\d+\.\d+\.\d+/.exec(a))==null?void 0:h[0])!=null?g:a;if(i===!1)return e.replace(/@([Ss]ince|[Vv]ersion)(:?\s+)unreleased/g,`@$1$2${c}`);let f=s.includes("bitbucket.org")?"bitbucket":"github",m=`${s}/${f==="bitbucket"?"commits":"releases"}/tag/${r?"v":""}${c}`,p=`## [${r?"v":""}${c}]`+(s!==""?`(${m})`:"")+(n?` - ${n}`:"");if(e.includes(p))return o!==!0&&console.info("changelog is already formatted"),e;let v=`(${s}/${f==="bitbucket"?"branches/":""}compare/HEAD..${r?"v":""}${c})`,$=`## [Unreleased]${s?v:""}

### `+["Added","Changed","Deprecated","Removed","Fixed","Security"].join(`

### `);return e.replace(/## \[Unreleased\](\(.*\))?/,p).replace(/### (Added|Changed|Deprecated|Removed|Fixed|Security)\n\n/g,"").replace(/### (Added|Changed|Deprecated|Removed|Fixed|Security)\n$/g,"").replace(/\n\n$/g,`
`).replace(p,$+`

`+p)}async function w(e){let{directoriesToIgnore:t,failOnError:n,filesPath:i,paths:r}=e;if(t.some(s=>i.includes(s)))return r!=null?r:[];let o=[];try{o=await(0,b.readdir)(i)}catch(s){if(s.code!=="ENOENT"){if(n)throw l.exitCode=1,s;console.warn(`could not read files in ${i}`)}o=[]}let a=(await Promise.all(o.map(async s=>(await(0,b.stat)(`${i}/${s}`)).isDirectory()===!0?await w({directoriesToIgnore:t,failOnError:n,filesPath:`${i}/${s}`,paths:r}):(0,D.join)(`${i}/${s}`)))).flat();return[...new Set([...r,...a])]}function _(e){var o;let t={repository:"",version:"0.0.0"};try{t=JSON.parse((0,A.readFileSync)("package.json","utf8"))}catch(a){l.env.NODE_ENV!=="test"&&e.quiet!==!0&&console.warn("could not read package.json")}let n=[".git",".github","coverage","dist","node_modules","tests/fixtures"],i={changelogPath:"CHANGELOG.md",date:(o=new Date().toISOString().split("T"))==null?void 0:o[0],dryRun:!1,failOnError:!1,filesPath:".",ignore:n,prefix:!1,quiet:l.env.NODE_ENV==="test"||!1,release:t.version,repository:T(t.repository)};return P(P({},i),e)}var x=require("fs/promises");async function Z(e){let{changelogPath:t,date:n,dryRun:i,failOnError:r,filesPath:o,ignore:a,prefix:s,quiet:d,release:c,repository:f}=_(e),m=l.env.NODE_ENV==="test"||i===!0,p=a,$=await w({directoriesToIgnore:p,failOnError:r,filesPath:o,paths:[t]}),h=B($,p),g=[];return await Promise.all(h.map(async u=>{let O="";try{O=await(0,x.readFile)(u,"utf8")}catch(R){if(r)throw l.exitCode=1,R;d!==!0&&console.warn(`could not read ${u}`)}let E=await N(O,{date:n,isChangelog:t===u,prefix:s,quiet:d,release:c,repository:f});if(O!==E&&(g.push(u),m!==!0))try{await(0,x.writeFile)(u,E,"utf8")}catch(R){if(r)throw l.exitCode=1,R;d!==!0&&console.warn(`could not write ${u}`)}})),g.length>0&&d!==!0&&console.info((m?"would have ":"")+`bumped ${g.join(", ")}`),i?[]:g}0&&(module.exports={releaseBump});
