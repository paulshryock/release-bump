var h=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var q=Object.getOwnPropertyNames,F=Object.getOwnPropertySymbols;var S=Object.prototype.hasOwnProperty,U=Object.prototype.propertyIsEnumerable;var C=(e,t,r)=>t in e?h(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,P=(e,t)=>{for(var r in t||(t={}))S.call(t,r)&&C(e,r,t[r]);if(F)for(var r of F(t))U.call(t,r)&&C(e,r,t[r]);return e};var I=(e,t)=>{for(var r in t)h(e,r,{get:t[r],enumerable:!0})},j=(e,t,r,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of q(t))!S.call(e,n)&&n!==r&&h(e,n,{get:()=>t[n],enumerable:!(i=_(t,n))||i.enumerable});return e};var L=e=>j(h({},"__esModule",{value:!0}),e);var G={};I(G,{releaseBump:()=>Z});module.exports=L(G);var V={RELEASE_BUMP_VERSION:"3.0.0-alpha.21"},l={env:V};var A=require("fs"),b=require("fs/promises"),D=require("path");function B(e,t){return e.filter(r=>!t.some(i=>r.includes(i)))}function z(e){return/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()!@:%_+.~#?&/=]*)/.test(e)?e:/^[-a-zA-Z0-9()!@:%_+~#?&=]+\/[-a-zA-Z0-9()!@:%_+~#?&=]+$/.test(e)?`https://github.com/${e}`:""}async function T(e,t){var y,g;let{date:r,isChangelog:i,prefix:n,quiet:o,release:a,repository:s}=t;if(!/^\d+\.\d+\.\d+$/.test(a))return o!==!0&&console.info(`not formatting text for prerelease ${a}`),e;let p=(g=(y=/\d+\.\d+\.\d+/.exec(a))==null?void 0:y[0])!=null?g:a;if(i===!1)return e.replace(/@([Ss]ince|[Vv]ersion)(:?\s+)unreleased/g,`@$1$2${p}`);let f=s.includes("bitbucket.org")?"bitbucket":"github",m=`${s}/${f==="bitbucket"?"commits":"releases"}/tag/${n?"v":""}${p}`,c=`## [${n?"v":""}${p}]`+(s!==""?`(${m})`:"")+(r?` - ${r}`:"");if(e.includes(c))return o!==!0&&console.info("changelog is already formatted"),e;let w=`(${s}/${f==="bitbucket"?"branches/":""}compare/HEAD..${n?"v":""}${p})`,$=`## [Unreleased]${s?w:""}

### `+["Added","Changed","Deprecated","Removed","Fixed","Security"].join(`

### `);return e.replace(/## \[Unreleased\](\(.*\))?/,c).replace(/### (Added|Changed|Deprecated|Removed|Fixed|Security)\n\n/g,"").replace(/### (Added|Changed|Deprecated|Removed|Fixed|Security)\n$/g,"").replace(/\n\n$/g,`
`).replace(c,$+`

`+c)}async function v(e){let{directoriesToIgnore:t,failOnError:r,filesPath:i,paths:n}=e;if(t.some(s=>i.includes(s)))return n!=null?n:[];let o=[];try{o=await(0,b.readdir)(i)}catch(s){if(s.code!=="ENOENT"){if(r)throw l.exitCode=1,s;console.warn(`could not read files in ${i}`)}o=[]}let a=(await Promise.all(o.map(async s=>(await(0,b.stat)(`${i}/${s}`)).isDirectory()===!0?await v({directoriesToIgnore:t,failOnError:r,filesPath:`${i}/${s}`,paths:n}):(0,D.join)(`${i}/${s}`)))).flat();return[...n,...a]}function N(e){var o;let t={repository:"",version:"0.0.0"};try{t=JSON.parse((0,A.readFileSync)("package.json","utf8"))}catch(a){l.env.NODE_ENV!=="test"&&e.quiet!==!0&&console.warn("could not read package.json")}let r=[".git",".github","coverage","dist","node_modules","tests/fixtures"],i={changelogPath:"CHANGELOG.md",date:(o=new Date().toISOString().split("T"))==null?void 0:o[0],dryRun:!1,failOnError:!1,filesPath:".",ignore:r,prefix:!1,quiet:l.env.NODE_ENV==="test"||!1,release:t.version,repository:z(t.repository)};return P(P({},i),e)}var x=require("fs/promises");async function Z(e){let{changelogPath:t,date:r,dryRun:i,failOnError:n,filesPath:o,ignore:a,prefix:s,quiet:d,release:p,repository:f}=N(e),m=l.env.NODE_ENV==="test"||i===!0,c=a,$=await v({directoriesToIgnore:c,failOnError:n,filesPath:o,paths:[t]}),y=B($,c),g=[];return await Promise.all(y.map(async u=>{let O="";try{O=await(0,x.readFile)(u,"utf8")}catch(R){if(n)throw l.exitCode=1,R;d!==!0&&console.warn(`could not read ${u}`)}let E=await T(O,{date:r,isChangelog:t===u,prefix:s,quiet:d,release:p,repository:f});if(O!==E&&(g.push(u),m!==!0))try{await(0,x.writeFile)(u,E,"utf8")}catch(R){if(n)throw l.exitCode=1,R;d!==!0&&console.warn(`could not write ${u}`)}})),g.length>0&&d!==!0&&console.info((m?"would have ":"")+`bumped ${g.join(", ")}`),i?[]:g}0&&(module.exports={releaseBump});
