var T=Object.defineProperty;var v=Object.getOwnPropertySymbols;var L=Object.prototype.hasOwnProperty,_=Object.prototype.propertyIsEnumerable;var F=(e,t,r)=>t in e?T(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,P=(e,t)=>{for(var r in t||(t={}))L.call(t,r)&&F(e,r,t[r]);if(v)for(var r of v(t))_.call(t,r)&&F(e,r,t[r]);return e};var U="3.0.0-alpha.34",b={RELEASE_BUMP_VERSION:U};import{Console as I}from"console";import{createWriteStream as k,readFileSync as N}from"fs";import{readdir as j,stat as V}from"fs/promises";import{join as z}from"path";function A(e,t){return e.filter(r=>!t.some(s=>r.includes(s)))}function C(e){let t=[];return e.forEach(r=>{Array.isArray(r)?t.push(...C(r)):t.push(r)}),t}function D(e){if(typeof e=="string"){if(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()!@:%_+.~#?&/=]*)/.test(e))return e;if(/^[-a-zA-Z0-9()!@:%_+~#?&=]+\/[-a-zA-Z0-9()!@:%_+~#?&=]+$/.test(e))return`https://github.com/${e}`}else return typeof(e==null?void 0:e.url)>"u"?"":D(e.url.replace(/(^git\+|\.git$)/,""));return""}async function q(e,t){var h,p;let{date:r,isChangelog:s,prefix:i,quiet:o,release:a,repository:n}=t;if(!/^\d+\.\d+\.\d+$/.test(a))return e;let l=(p=(h=/\d+\.\d+\.\d+/.exec(a))==null?void 0:h[0])!=null?p:a;if(s===!1)return e.replace(/@([Ss]ince|[Vv]ersion)(:?\s+)unreleased/g,`@$1$2${l}`);let f=n.includes("bitbucket.org")?"bitbucket":"github",d=`${n}/${f==="bitbucket"?"commits":"releases"}/tag/${i?"v":""}${l}`,c=`## [${i?"v":""}${l}]`+(n!==""?`(${d})`:"")+(r?` - ${r}`:""),m=x({quiet:o});if(e.includes(c))return m.info("changelog is already formatted"),e;let w=`(${n}/${f==="bitbucket"?"branches/":""}compare/HEAD..${i?"v":""}${l})`,$=`## [Unreleased]${n?w:""}

### `+["Added","Changed","Deprecated","Removed","Fixed","Security"].join(`

### `);return e.replace(/## \[Unreleased\](\(.*\))?/,c).replace(/### (Added|Changed|Deprecated|Removed|Fixed|Security)\n\n/g,"").replace(/### (Added|Changed|Deprecated|Removed|Fixed|Security)\n$/g,"").replace(/\n\n$/g,`
`).replace(c,$+`

`+c)}async function R(e){let{directoriesToIgnore:t,failOnError:r,filesPath:s,paths:i}=e;if(t.some(n=>s.includes(n)))return i!=null?i:[];let o=[];try{o=await j(s)}catch(n){if(r)throw process.exitCode=1,n;o=[]}let a=await Promise.all(o.map(async n=>(await V(`${s}/${n}`)).isDirectory()===!0?await R({directoriesToIgnore:t,failOnError:r,filesPath:`${s}/${n}`,paths:i}):z(`${s}/${n}`)));return[...new Set(C([...i,...a]))]}function x({quiet:e}){return e===!0?new I({stdout:k("/dev/null"),stderr:k("/dev/null")}):console}function B(e){var n,g;let t={repository:"",version:"0.0.0"},r=b.NODE_ENV==="test"||!1,s=x({quiet:(n=e.quiet)!=null?n:r});try{t=JSON.parse(N("package.json","utf8"))}catch(l){s.warn("could not read package.json")}let i=[".git",".github","coverage","dist","node_modules","tests/fixtures"],o={changelogPath:"CHANGELOG.md",date:(g=new Date().toISOString().split("T"))==null?void 0:g[0],dryRun:!1,failOnError:!1,filesPath:".",ignore:i,prefix:!1,quiet:r,release:t.version,repository:D(t.repository)};return P(P({},o),e)}import{readFile as Z,writeFile as G}from"fs/promises";async function ne(e){let{changelogPath:t,date:r,dryRun:s,failOnError:i,filesPath:o,ignore:a,prefix:n,quiet:g,release:l,repository:f}=B(e),d=x({quiet:g}),c=s===!0,m=a,$=await R({directoriesToIgnore:m,failOnError:i,filesPath:o,paths:[t]}),h=A($,m),p=[];return await Promise.all(h.map(async u=>{let O="";try{O=await Z(u,"utf8")}catch(y){if(i)throw process.exitCode=1,y;d.warn(`could not read ${u}`)}let E=await q(O,{date:r,isChangelog:t===u,prefix:n,quiet:g,release:l,repository:f});if(O!==E&&(p.push(u),c!==!0))try{b.NODE_ENV!=="test"&&await G(u,E,"utf8")}catch(y){if(i)throw process.exitCode=1,y;d.warn(`could not write ${u}`,y)}})),p.length>0&&d.info((c?"would have ":"")+`bumped ${p.join(", ")}`),s?[]:p}export{ne as releaseBump};
